// Generated by CoffeeScript 1.6.3
(function() {
  var shinyapp;

  shinyapp = angular.module('shinyapp', []);

  shinyapp.config(function($locationProvider) {
    return $locationProvider.html5Mode(true);
  });

  shinyapp.factory('chargifyPaymentFactory', function($log, $http) {
    var factory;
    factory = {};
    factory.get = function(id) {
      return $http.get("/api/chargify/payment_profiles/" + id);
    };
    factory.create = function(payment) {
      return $http.post('/api/chargify/payment_profiles', payment);
    };
    factory.update = function(id, payment) {
      return $http.put("/api/chargify/payment_profiles/" + id, payment);
    };
    factory["delete"] = function(id) {
      return $http["delete"]("/api/chargify/payment_profiles/" + id);
    };
    return factory;
  });

  shinyapp.factory('chargifyCustomerFactory', function($log, $http) {
    var factory;
    factory = {};
    factory.get = function() {
      return $http.get('/api/chargify/customer');
    };
    factory.create = function(customer) {
      return $http.post('/api/chargify/customer', customer);
    };
    factory.update = function(customer) {
      return $http.put('/api/chargify/customer', customer);
    };
    factory["delete"] = function() {
      return $http["delete"]('/api/chargify/customer');
    };
    return factory;
  });

  shinyapp.factory('chargifySubscriptionFactory', function($log, $http) {
    var factory;
    factory = {};
    factory.get = function() {
      return $http.get('/api/chargify/subscription');
    };
    factory.create = function() {
      return $http.post('/api/chargify/subscription');
    };
    factory.update = function() {
      return $http.put('/api/chargify/subscription');
    };
    factory["delete"] = function() {
      return $http["delete"]('/api/chargify/subscription');
    };
    return factory;
  });

  shinyapp.factory('userFactory', function($log, $http) {
    var factory;
    factory = {};
    factory.get = function() {
      return $http.get("/api/user");
    };
    factory.create = function(json) {
      return $http.post("/create", json);
    };
    factory.update = function(json) {
      return $http.put("/api/user", json);
    };
    factory["delete"] = function() {
      return $http["delete"]("/api/user");
    };
    factory.subscriptions = function() {
      return $http.get("/api/user/subscriptions");
    };
    return factory;
  });

  shinyapp.controller('indexController', function($scope, $log, $location) {
    return $scope.go = function(path) {
      return window.location.href = path;
    };
  });

  shinyapp.controller('signupController', function($scope, $log, $location, userFactory) {
    $scope.go = function(path) {
      return window.location.href = path;
    };
    return $scope.signup = function() {
      $log.info('signing up');
      $log.info($scope.user);
      return userFactory.create($scope.user).success(function(data, status, headers, config) {
        $log.info("Successfully signed up new user");
        return $scope.go('/success');
      }).error(function(data, status, headers, config) {
        $log.error("Failed to signup new user");
        return alert("Failed to signup new user");
      });
    };
  });

  shinyapp.controller('accountInfoController', function($scope, $log, $location, userFactory) {
    return userFactory.get().success(function(data, status, headers, config) {
      $scope.user = data;
      return $log.info("got account info");
    }).error(function(data, status, headers, config) {
      return $log.error('Failed to get account info');
    });
  });

  shinyapp.controller('accountPlanController', function($scope, $log, $location, userFactory, chargifySubscriptionFactory) {
    userFactory.get().success(function(data, status, headers, config) {
      return $scope.user = data;
    }).error(function(data, status, headers, config) {
      return $log.error('Failed to get account info');
    });
    userFactory.subscriptions().success(function(data, status, headers, config) {
      var subscription, _i, _len, _results;
      $scope.subscriptions = data;
      $scope.plan = 'free';
      _results = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        subscription = data[_i];
        _results.push($scope.plan = subscription.subscription.product.handle);
      }
      return _results;
    }).error(function(data, status, headers, config) {
      return $log.error('Failed to get subscriptions');
    });
    return $scope.updateplan = function() {
      if ($scope.plan !== 'free') {
        if ($scope.user.chargify_id != null) {

        } else {
          return alert('Cannot change your plan til you update your billing information');
        }
      }
    };
  });

  shinyapp.controller('accountBillingController', function($scope, $log, $location, userFactory, chargifyPaymentFactory, chargifyCustomerFactory, chargifySubscriptionFactory) {
    var createCustomer, updateBilling;
    userFactory.get().success(function(data, status, headers, config) {
      return $scope.user = data;
    }).error(function(data, status, headers, config) {
      return $log.error('Failed to get account info');
    });
    userFactory.subscriptions().success(function(data, status, headers, config) {
      $scope.subscriptions = data;
      if (data.length > 0) {
        return $scope.billing = data[0][data[0].payment_type];
      } else {
        return $scope.billing = {};
      }
    }).error(function(data, status, headers, config) {
      return $log.error('Failed to get subscriptions');
    });
    updateBilling = function() {
      if ($scope.user.chargify_id != null) {

      } else {

      }
    };
    return createCustomer = function() {
      return userFactory.get().success(function(data, status, headers, config) {
        var customer, user;
        user = data;
        customer = {};
        customer.first_name = user.first;
        customer.last_name = user.last;
        customer.email = user.email;
        customer.organization = user.org;
        customer.reference = user.username;
        return chargifyCustomerFactory.create(customer).success(function(data, status, headers, config) {
          $log.info('created customer');
          user.chargify_id = data.id;
          return userFactory.update(user).success(function(data, status, headers, config) {
            return $log.info('created customer and updated user');
          }).error(function(data, status, headers, config) {
            return $log.error('failed to update user');
          });
        }).error(function(data, status, headers, config) {
          return $log.error('failed to create customer');
        });
      }).error(function(data, status, headers, config) {
        return $log.error('Failed to get account info');
      });
    };
  });

}).call(this);
